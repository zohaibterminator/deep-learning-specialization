The old rule of thumb in ML for splitting your dataset is that you make a 70/30 split, in which 70% of the split becomes your train set, and the other split becomes your test set. And if you are splitting the dataset into train, dev and test sets, the split would become 60/20/20, with the 60% becoming your train set, and the dev and test set becoming the other 2 20-20 splits. This was reasonable back in the day, when datasets were smaller. In the modern ML era, where you are working with a dataset with a million training examples, this is not really a good heurestic to split your dataset.

If you are working on a dataset with a million training examples or more, the split should be 98% training set, 1% dev set, and 1% test set. 1% of a million is 10,000, which is more than enough to make a dev or a test set. Also, given the hunger of Deep Learning algorithms for data, a larger portion of the dataset goes towards making the training set.

So, how about the test set? Remember the purpose of your test set is that, after you finish developing a system, the test set helps evaluate how good your final system is. So, the guideline is, to set your test set to big enough to give high confidence in the overall performance of your system. So, unless you need to have a very accurate measure of how well your final system is performing, maybe you don't need millions and millions of examples in your test set, and maybe for your application if you think that having 10,000 examples gives you enough confidence to find the performance. For some applications, maybe you don't need a high confidence in the overall performance of your final system. Maybe all you need is a train and dev set. In fact, what sometimes happened was, people were talking about using train test splits but what they were actually doing was iterating on the test set. So rather than a test set, what they had was a train dev split and no test set. If you're actually tuning to this set, to this dev set and this test set, It's better to call it a dev set. Maybe it's not totally unreasonable to just have a train dev set, although it's not what is usually recommended.