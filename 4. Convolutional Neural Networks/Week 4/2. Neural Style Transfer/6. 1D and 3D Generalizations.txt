We have learned a lot about ConvNets, everything ranging from the architecture of the ConvNet to how to use it for image recognition, to object detection, to face recognition and neural-style transfer. And even though most of the discussion has focused on images, on sort of 2D data, because images are so pervasive. It turns out that many of the ideas we've learned about also apply, not just to 2D images but also to 1D data as well as to 3D data.

In 2D convolutions, you might have a 14x14 image and a 5x5 2D filter, and after convolution operation you end up with 10x10 matrix. The image might have multiple channels so the filter will also have the same number of channels, etc. Similar idea can also be applied to 1D data.

Lets say you have EKG data of someone's heartbeat and if you want to make medical diagnosis, for example, then you would have 1D data because what EKG data is, is it's a time series showing the voltage at each instant in time. So rather than a 14 x 14 dimensional input, maybe you just have a 14 dimensional input. And in that case, you might want to convolve this with a 1 dimensional filter. So rather than the 5 by 5, you just have 5 dimensional filter. So, if you use a 5-dimensional filter to a 14-dimensional time-series data, you will get a 10-dimensional output. You can also use multiple filters, lets say 16 filters, so you will get a 10x16 output. But, for these types of 1D sequences you usually use RNNs or LSTMs.

How about 3D data? We can take an example of the CT scan, which is a type of X-ray scan that gives a three dimensional model of your body. But what a CT scan does is it takes different slices of your body. So this data is fundamentally three dimensional. Where the different slices through the volume, are different slices through the torso. So if you want to apply a ConvNet to detect features in this three dimensional CAT scan or CT scan, then you can generalize the ideas of 1D and 2D convolutions to 3D convolutions as well. So if you have a 3D volume of 14x14x14 size And if you convolve this with a now a 5x5x5 filter, so you're filters now are also three dimensional then this would give you a 10x10x10 volume. Like 1D and 2D convolutions, the 3D image can have channels as well. So, if the image has 3 channels, the size of the image will be 14x14x14x3, and to convolve it with a filter, we should have 3 channels in the filter as well to match the channels of the image, making our filter size 5x5x5x3. Again, like 1D and 2D convolutions, we can use multiple filters as well.