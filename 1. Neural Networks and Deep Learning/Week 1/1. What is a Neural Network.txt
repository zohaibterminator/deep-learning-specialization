Deep Learning refers to training Neural Networks, often large neural networks. So what exactly is a Neural Network?

Suppose you are looking to predict house prices by using the data for their sizes, and you want to fit a function to predict the size of the house as a function of it's size. You might say that you can just take a Linear Regression function, and just put a straight lines through the data. But to be a lil fancier, you might say that we know prices can never be negative, how about we just replace all negative values with 0.

What have you just seen is a very simple and basic Neural Network, a function that takes a variable and outputs a value. This single function, also called a Neuron, just takes an input, computes a linear function, takes max(a, 0), and outputs the answer. This function is called a ReLU function, or Rectified Linear Unit, where rectify just means taking a max of 0, which is why the function is a straight line when it reaches the x-axis (see the image). If this neuron is a small neural network, then a larger neural network can be formed by stacking a lot of neurons together.

Letâ€™s say that instead of predicting the price of a house just from the size, you now have other features. You know other things about the house, such as the number of bedrooms, and you might think that one of the things that really affects the price of a house is family size. So can this house fit your family of three, or family of four, or family of five? And it's really based on the size in square feet or square meters, and the number of bedrooms that determines whether or not a house can fit your family's family size. And then maybe you know the zip codes, in different countries it's called a postal code of a house. And the zip code maybe as a feature tells you, walkability? So is this neighborhood highly walkable? And then the zip code as well as the wealth maybe tells you how good is the school quality. So, each of these 3 combination of these features can be thought of as a Neuron or a ReLU function. So that based on the size and number of bedrooms, you can estimate the family size, their zip code, based on walkability, based on zip code and wealth can estimate the school quality. And then finally you might think that well the way people decide how much they're willing to pay for a house, is they look at the things that really matter to them. In this case family size, walkability, and school quality and that helps you predict the price.

So in this example, X is the 4 inputs, and Y is the output, which is the price. So, a Neural network, when you implement it, all you need to give it is the features X, and output Y, and all the features in the middle, it will figure it out itself.

The layer of neurons in the middle, is called the hidden layer. Instead of sayin that the first neuron is called the family size, and it is a combination of features size and bedrooms, we just provide all the features to a neuron and let it decide what resultant feature it can calculate. And given enough of these "training examples" X and Y, neural networks are remarkably good at finding the function that accurately maps from X to Y.